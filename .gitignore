# Project Files
docs/
apr_20_parallel_reports/
**/model_output/
model_runs/wsc_2020/
hai_env/
covid_env/
visualization/data/
syn_pop_NC*
base_files/
temp.py
*.docx
covid_reports/
model_runs/parallel_runs*
*.pickle
model_runs/output_*
model_runs/test_runs/
parallel_reports/
log
config_files/draft_run_configs
data/seir_case_estimates/*
reporting/tableau_workbook/*.csv
data/geography/NC Licnesed Facilities STACH-LTACH-NH_3.27.18.xlsx
data/IDs/hospital_capacities.json
*.twb
*.twbx
*.pptx
seir/cases_by_day__*
!**/synthetic_population.parquet
seir/cori_nowcast.xlsx
seir/cori_re_over_time.csv

# Typical Ignores
__pycache__/
*.pyc
makeFile.Rout
.Rhistory
Rplots.pdf*
.Rdata*
.idea/
.coverage*
.DS_Store
.idea
documents/
pycallgraph*
.Rproj.user
.ipynb_checkpoints/
.cache/
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# vscode
.vscode/

# coverage settings
!.coveragerc

paper.pdf
paper.docx

covid_manage_instance.py
covid_manage_instance.txt
